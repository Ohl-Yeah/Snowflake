/****  DATA_ENGINEER ROLE ****/
// Why this custom role?
// 1)   Want the BI team to have access to the account usage information in Snowflake,
//      and SYSADMIN role does not have it. Do not want to change security on standard
//      SNOWFLAKE roles per best practice recommendations from Snowflake
// 2)   SYSADMIN should have OWNERSHIP privilege of all database objects in SNOWFLAKE.
//      However, do not want the BI team to operate on SYSADMIN role, because it introduces
//      risk of deleting things in a staging environment. With a custom role, we can prevent
//      this risk by only giving SELECT and REFERENCES privileges on staging objects as the 
//      default role for BI team members.

// Kinds of privileges this role should have:
//  1) Global - Needs access to create objects and execute tasks
//  2) Databases - Needs full access to all databases except staging dbs
//  3) Schemas - Follows database access
//  4) Tables - Follows database access
//  5) Views - Follows database access
//  6) Stages - Follows database access
//  7) Pipes - Follows database access
//  8) Streams  - Follows database access
//  9) Tasks - Follows database access
// 10) Functions - Follows database access
// 11) Procedures - Follows database access
// 12) Users - MONITOR privilege for all users
// 13) Roles - No privileges
// 14) Resource Monitor - All privileges for all
// 15) Virtual Warehouse - All privileges for all
// 16) Connection - No privileges
// 17) Failover Group - No privileges
// 18) Replication Group - No privileges
// 19) Integration - No privileges
// 20) Network Policy - No privileges
// 21) Session Policy - No privileges
// 22) Data Exchange - No Privileges
// 23) Data Exchange Listing - No privileges
// 24) External Tables - All privileges
// 25) File Formats - All privileges
// 26) Masking Policies - No privileges (centralize security w/ SECURITYADMIN role)
// 27) Row Access Policies - No privileges (centralize security w/ SECURITYADMIN role)
// 28) Tag Privileges - All privileges (globa)
// 29) Sequence Privileges - All privileges


USE ROLE SECURITYADMIN; // Security admin creates the role (has MANAGE GRANTS privilege)
CREATE ROLE DATA_ENGINEER
    COMMENT = 'Role for BI data team to manage & create Snowflake objects';

/****************************************************************************************
*   -- GLOBAL PRIVILEGES --
*   Paradigm:   Main role used by BI team members; all privileges required to 
*               manage the data landscape need to be granted to this role
*               The kinds of privileges excluded here would be those more appropriately
*               handled w/ help of infrastructure team, such as network policies,
*               data exchanges, and replication groups.
****************************************************************************************/
USE ROLE ACCOUNTADMIN; // Need to use ACCOUNTADMIN role to set account-level privileges
GRANT   APPLY TAG, // For adding or dropping tags on an object
        CREATE DATABASE, // Role needs to create databases
        CREATE WAREHOUSE, // Role needs to create warehouses
                          // Should this be restricted to ACCOUNT_ADMIN as 
                          // this has cost implications?
        EXECUTE MANAGED TASK, // For creating tasksthat use Snowflake-managed compute resources
        EXECUTE TASK, // Ability to run tasks owned by role
        MONITOR EXECUTION, // For monitoring Snowpipes
        MONITOR USAGE // Give role ability to monitor account-level usage & historical information
    ON ACCOUNT
    TO ROLE DATA_ENGINEER;

/****************************************************************************************
*   -- DATABASE PRIVILEGES --
*      Paradigm: DATA_ENGINEER role should have extensive access to
*                all databases in the SNOWFLAKE environment.
*                the only restrictions apply to the staging database
*                which Fivetran automatically creates objects in, and
*                the standard shared databases from Snowflake, such as
*                the SNOWFLAKE db, and the SNOWFLAKE_SAMPLE_DATA db.
****************************************************************************************/
USE ROLE SECURITYADMIN;
GRANT ALL ON DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT MONITOR, USAGE ON DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT MONITOR, USAGE ON DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT MONITOR, USAGE ON DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE DATA_ENGINEER;
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE_SAMPLE_DATA TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
// New S8 database
GRANT MONITOR, USAGE ON DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;

/****************************************************************************************
*   -- GRANTS FOR SCHEMAS --
*      Paradigm: Give same access to Schemas as databases
***************************************************************************************/
USE ROLE SECURITYADMIN;
GRANT ALL ON ALL SCHEMAS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT MONITOR, USAGE ON ALL SCHEMAS IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT MONITOR, USAGE ON ALL SCHEMAS IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT MONITOR, USAGE ON ALL SCHEMAS IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL SCHEMAS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT MONITOR, USAGE ON FUTURE SCHEMAS IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT MONITOR, USAGE ON FUTURE SCHEMAS IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT MONITOR, USAGE ON FUTURE SCHEMAS IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;

//New S8 db:
GRANT MONITOR, USAGE ON ALL SCHEMAS IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;

/****************************************************************************************
*    -- GRANTS FOR TABLES & VIEWS --
*       Paradigm:   Access to the current and future objects within 
*                   each database will follow the role's access to the
*                   database itself. 
*       Note:       For future grants, have to explicitly grant access to
*                   each schema, which would take a while to write and 
*                   maintain. As such, the future grants script below 
*                   produces the script that has to be executed for this.
****************************************************************************************/
USE ROLE SECURITYADMIN;
// ----------------------------------------
// 1) TABLES
// ----------------------------------------
SELECT  'GRANT ALL ON ALL TABLES IN SCHEMA ' || 
        CONCAT( '"', CATALOG_NAME, '"', '.', '"', SCHEMA_NAME, '"' ) ||
        ' TO ROLE DATA_ENGINEER;' AS "Command"
FROM    SNOWFLAKE.ACCOUNT_USAGE.SCHEMATA
WHERE   CATALOG_NAME IN( 'DEMO_DB', 'UTIL_DB', 'ERP_DATA_PROD', 'ERP_DATA_UAT',
                         'ERP_REPORTING_DEV', 'ERP_REPORTING_UAT', 'ERP_REPORTING_PROD',
                         'FLAT_FILES_PROD', 'SANDBOX', 'TABLEAU_STAGING', 'TIDY_DB',
                         'APPLICATION_ENTITY_DB', 'BUSINESS_LOGIC_DB', 'PRESENTATION_DB'
                       )
    AND SCHEMA_NAME NOT LIKE 'FIVETRAN%'
    AND DELETED IS NULL
    UNION ALL
// Privileges for staging databases
SELECT  'GRANT SELECT, REFERENCES ON ALL TABLES IN SCHEMA ' || 
        CONCAT( '"', CATALOG_NAME, '"', '.', '"', SCHEMA_NAME, '"' ) ||
        ' TO ROLE DATA_ENGINEER;' AS "Command"
FROM    SNOWFLAKE.ACCOUNT_USAGE.SCHEMATA
WHERE   CATALOG_NAME IN( 'ERP_STAGING_PROD', 'ERP_STAGING_UAT', 'ERP_STAGING_PROD_ARCHIVE' )
    AND SCHEMA_NAME NOT LIKE 'FIVETRAN%'
    AND DELETED IS NULL;

GRANT ALL ON ALL TABLES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL TABLES IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL TABLES IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL TABLES IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TABLES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE TABLES IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE TABLES IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE TABLES IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TABLES IN SCHEMA PRESENTATION_DB.ADMIN TO ROLE DATA_ENGINEER;

//New S8 db:
GRANT SELECT, REFERENCES ON ALL TABLES IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE TABLES IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;
// ----------------------------------------
// 2) SCHEMA-LEVEL TABLE GRANTS - must copy paste results & run
// ----------------------------------------
SELECT  'GRANT ALL ON FUTURE TABLES IN SCHEMA ' || 
        CONCAT( '"', CATALOG_NAME, '"', '.', '"', SCHEMA_NAME, '"' ) ||
        ' TO ROLE DATA_ENGINEER;' AS "Command"
FROM    SNOWFLAKE.ACCOUNT_USAGE.SCHEMATA
WHERE   CATALOG_NAME IN( 'DEMO_DB', 'UTIL_DB', 'ERP_DATA_PROD', 'ERP_DATA_UAT',
                         'ERP_REPORTING_DEV', 'ERP_REPORTING_UAT', 'ERP_REPORTING_PROD',
                         'FLAT_FILES_PROD', 'SANDBOX', 'TABLEAU_STAGING', 'TIDY_DB',
                         'APPLICATION_ENTITY_DB', 'BUSINESS_LOGIC_DB', 'PRESENTATION_DB'
                       )
    AND SCHEMA_NAME NOT LIKE 'FIVETRAN%'
    AND DELETED IS NULL
    UNION ALL
// Privileges for staging databases
SELECT  'GRANT SELECT, REFERENCES ON FUTURE TABLES IN SCHEMA ' || 
        CONCAT( '"', CATALOG_NAME, '"', '.', '"', SCHEMA_NAME, '"' ) ||
        ' TO ROLE DATA_ENGINEER;' AS "Command"
FROM    SNOWFLAKE.ACCOUNT_USAGE.SCHEMATA
WHERE   CATALOG_NAME IN( 'ERP_STAGING_PROD', 'ERP_STAGING_UAT', 'ERP_STAGING_PROD_ARCHIVE' )
    AND SCHEMA_NAME NOT LIKE 'FIVETRAN%'
    AND DELETED IS NULL;

// ----------------------------------------
// 3) VIEWS
// ----------------------------------------
GRANT ALL ON ALL VIEWS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL VIEWS IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL VIEWS IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL VIEWS IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL VIEWS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE VIEWS IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE VIEWS IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE VIEWS IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE VIEWS IN SCHEMA PRESENTATION_DB.ADMIN TO ROLE DATA_ENGINEER;

//New S8 db:
GRANT SELECT, REFERENCES ON ALL VIEWS IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL MATERIALIZED VIEWS IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;
// ----------------------------------------
// 4) SCHEMA-LEVEL VIEW GRANTS - must copy paste results & run
// ----------------------------------------
SELECT  'GRANT ALL ON FUTURE VIEWS IN SCHEMA ' || 
        CONCAT( '"', CATALOG_NAME, '"', '.', '"', SCHEMA_NAME, '"' ) ||
        ' TO ROLE DATA_ENGINEER;' AS "Command"
FROM    SNOWFLAKE.ACCOUNT_USAGE.SCHEMATA
WHERE   CATALOG_NAME IN( 'DEMO_DB', 'UTIL_DB', 'ERP_DATA_PROD', 'ERP_DATA_UAT',
                         'ERP_REPORTING_DEV', 'ERP_REPORTING_UAT', 'ERP_REPORTING_PROD',
                         'FLAT_FILES_PROD', 'SANDBOX', 'TABLEAU_STAGING', 'TIDY_DB',
                         'APPLICATION_ENTITY_DB', 'BUSINESS_LOGIC_DB', 'PRESENTATION_DB'
                       )
    AND SCHEMA_NAME NOT LIKE 'FIVETRAN%'
    AND DELETED IS NULL
    UNION ALL
// Privileges for staging databases
SELECT  'GRANT SELECT, REFERENCES ON FUTURE VIEWS IN SCHEMA ' || 
        CONCAT( '"', CATALOG_NAME, '"', '.', '"', SCHEMA_NAME, '"' ) ||
        ' TO ROLE DATA_ENGINEER;' AS "Command"
FROM    SNOWFLAKE.ACCOUNT_USAGE.SCHEMATA
WHERE   CATALOG_NAME IN( 'ERP_STAGING_PROD', 'ERP_STAGING_UAT', 'ERP_STAGING_PROD_ARCHIVE' )
    AND SCHEMA_NAME NOT LIKE 'FIVETRAN%'
    AND DELETED IS NULL;

/****************************************************************************************
*    -- STAGES PRIVILEGES --
*       Paradigm:   DATA_ENGINEER should be able to operate
*                   on all stored procedures. In general, all will
*                   be stored in UTIL_DB, but will also grant 
*                   privileges in other databases with the exception
*                   of all staging databases and Snowflake standard
*                   databases
****************************************************************************************/
GRANT ALL ON ALL STAGES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STAGES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;

//New S8 db:
GRANT ALL ON ALL STAGES IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STAGES IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;

/****************************************************************************************
*    -- SNOWPIPE PRIVILEGES --
*       Paradigm:   DATA_ENGINEER role will be creating and managing 
*                   Snowpipes, so needs access to all of them. Exception is 
*                   databases for staging and Snowflake standard databases
*       Note, don't have pipes at time of creating role, so only granting
*       privileges to future pipes.
****************************************************************************************/
GRANT ALL ON FUTURE PIPES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PIPES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;

//New S8 db:
GRANT ALL ON FUTURE PIPES IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;

/****************************************************************************************
*    -- STREAM PRIVILEGES --
*       Paradigm:   DATA_ENGINEER role will be the role used in loading any
*                   data to Snowflake, so it needs access to all stages.
****************************************************************************************/
GRANT ALL ON ALL STREAMS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL STREAMS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;

//New S8 db:
GRANT ALL ON ALL STREAMS IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE STREAMS IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;

/****************************************************************************************
*    -- TASK PRIVILEGES --
*       Paradigm:   DATA_ENGINEER role needs full access to all tasks
****************************************************************************************/
GRANT ALL ON ALL TASKS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL TASKS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;


// New S8 database
GRANT ALL ON ALL TASKS IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE TASKS IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;


/****************************************************************************************
*    -- FUNCTION PRIVILEGES --
*       Paradigm:   DATA_ENGINEER role needs full access to all functions
****************************************************************************************/
GRANT ALL ON ALL FUNCTIONS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL FUNCTIONS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;

//New S8 db:
GRANT ALL ON ALL FUNCTIONS IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE FUNCTIONS IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;

/****************************************************************************************
*    -- PROCEDURE PRIVILEGES --
*       Paradigm:   DATA_ENGINEER role needs full access to all procedures
****************************************************************************************/
GRANT ALL ON ALL PROCEDURES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON ALL PROCEDURES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;

// New S8 db:
GRANT ALL ON ALL PROCEDURES IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;
GRANT ALL ON FUTURE PROCEDURES IN DATABASE ERP_STAGING_DEVS8 TO ROLE DATA_ENGINEER;

/****************************************************************************************
*    -- USER PRIVILEGES --
*       Paradigm:   Give data engineer privilege to monitor all users
*       Note, need to grant this privilege for each user, so the query
*       below produces the commmand that you need to execute.
****************************************************************************************/
USE ROLE ACCOUNTADMIN;
SELECT  'GRANT MONITOR ON USER "' || NAME || '" TO ROLE DATA_ENGINEER;' AS "COMMANDS"
FROM    SNOWFLAKE.ACCOUNT_USAGE.USERS
WHERE   DELETED_ON IS NULL;

/****************************************************************************************
*    -- VIRTUAL WAREHOUSE PRIVILEGES --
*       Paradigm:   DATA_ENGINEER should have access to operate and
*                   change (??) all warehouses
*                   Exception is the warehouses used by ETL tool
*                   Ownership of warehouses to which role??
*       Note that GRANT ALL does not grant ownership
****************************************************************************************/
GRANT ALL ON WAREHOUSE COMPUTE_WH TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE FINANCE_MED TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE FINANCE_SMALL TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE FINANCE_STD TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE OPERATIONS_SMALL TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE OPERATIONS_STD TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE SALES_MARK_SMALL TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE SALES_MARK_STD TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE IT_XSMALL TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE IT_SMALL TO ROLE DATA_ENGINEER;
GRANT ALL ON WAREHOUSE IT_MED TO ROLE DATA_ENGINEER;



/****************************************************************************************
*    -- EXTERNAL TABLE PRIVILEGES --
*       Paradigm:   This role should be able to see all data in Snowflake, including
*                   what is stored in external tables (in a stage).
*       Note that GRANT ALL does not grant ownership
****************************************************************************************/
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON ALL EXTERNAL TABLES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT SELECT, REFERENCES ON FUTURE EXTERNAL TABLES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;

/****************************************************************************************
*    -- FILE FORMAT PRIVILEGES --
*       Paradigm:   This role needs full access to all file formats in Snowflake
****************************************************************************************/
GRANT USAGE ON ALL FILE FORMATS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;

/****************************************************************************************
*    -- SEQUENCE PRIVILEGES --
*       Paradigm:   This role needs full access to all sequences in Snowflake
****************************************************************************************/
GRANT USAGE ON ALL SEQUENCES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SEQUENCES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE DEMO_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE UTIL_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE ERP_DATA_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE ERP_DATA_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE ERP_REPORTING_DEV TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE ERP_REPORTING_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE ERP_REPORTING_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE ERP_STAGING_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE ERP_STAGING_UAT TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE ERP_STAGING_PROD_ARCHIVE TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE FLAT_FILES_PROD TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE SANDBOX TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE TABLEAU_STAGING TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE TIDY_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE APPLICATION_ENTITY_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE BUSINESS_LOGIC_DB TO ROLE DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN DATABASE PRESENTATION_DB TO ROLE DATA_ENGINEER;

// Grant this role to BI team users:
GRANT ROLE DATA_ENGINEER TO USER KBAILEY;
// Grant role to other BI team members & mgr after testing
// and approval of script w/ John Weaver
GRANT ROLE DATA_ENGINEER TO USER JVINCENT;
GRANT ROLE DATA_ENGINEER TO USER "MOHLRICH@BENCHMADE.COM";
//GRANT ROLE DATA_ENGINEER TO USER CMARTEY; (??)

// Role should be created using SysAdmin, but this 
// explicitly gives ownership to SysAdmin role per 
// Snowflake best practices recommendation.
USE ROLE SECURITYADMIN;
GRANT OWNERSHIP 
    ON ROLE DATA_ENGINEER
    TO SYSADMIN;
    
GRANT ROLE DATA_ENGINEER TO ROLE SYSADMIN;
